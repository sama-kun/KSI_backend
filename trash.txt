async create(userDto: Prisma.UserCreateInput): Promise<User> {
    try {
      const user = await this.prisma.user.create({ data: userDto });
      delete user.password;
      return user;
    } catch (error) {
      console.error(error);
      throw new BadRequestException(error.message);
    }
  }

  async getAll(): Promise<Prisma.UserCreateInput[]> {
    const users = await this.prisma.user.findMany();
    console.log(users);
    return users;
  }

  // getRoleByName(role: string): string {
  //   return Roles[role];
  // }


  {
    "statusCode": 201,
    "data": {
        "asset_id": "74e24ed4342684c874e5b54e42711966",
        "public_id": "jfzoqzjltulcb4bwdibz",
        "version": 1692587970,
        "version_id": "2325a980416d3dfe16615b0aff4b4bac",
        "signature": "7a310352b556aea4fcff3bbacfcccb4996a45e9b",
        "width": 3600,
        "height": 2338,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-08-21T03:19:30Z",
        "tags": [],
        "bytes": 417730,
        "type": "upload",
        "etag": "75e95c82ebb4a33cd6c557dec967eb12",
        "placeholder": false,
        "url": "http://res.cloudinary.com/digrp0u1f/image/upload/v1692587970/jfzoqzjltulcb4bwdibz.png",
        "secure_url": "https://res.cloudinary.com/digrp0u1f/image/upload/v1692587970/jfzoqzjltulcb4bwdibz.png",
        "folder": "",
        "original_filename": "file",
        "api_key": "776412232818641"
    }
}


<!-- <% for (let i = 0; i < project.carts.length; i++) { %>
<%=i+1%>   |    <%=project.carts[i].item.name%>    |    <%=project.carts[i].quantity%>   |     <%=project.name%>     |      <%=project.carts[i].item.workingHours%>
<% } %> -->

<!-- Manager: <%= data.projec.createdBy.email %> -->
<!-- 
<%= data.project.name %>
Data: <%= data.project.carts[0].createdAt %> -->
<!-- Company: KSI PetroGasServices LLP
Warehouse Address: Atyrau, Zhuldyz-3, 13/3
Vehicle Details: -->





async mdnReport(res: Response, user: UserEntity, id: number) {
    // const name = 'mdnreport_' + user.email + '.pdf';
    try {
      const project = await this.findById(id, [
        'cart',
        'cart.cartItems.items',
        'cart.cartItems.itemGroup',
        'cart.createdBy',
      ]);
      const name = 'mdnreport.pdf';
      console.log(project);
      const fileName = path.join(__dirname, './template', name);
      ejs.renderFile(
        path.join(__dirname, './template/', 'mdnreport.ejs'),
        { data: project },
        (err, data) => {
          if (err) {
            res.send(err);
          } else {
            const options = {
              height: '11.25in',
              width: '8.5in',
              header: {
                height: '20mm',
              },
              footer: {
                height: '20mm',
              },
            };
            pdf.create(data, options).toFile(fileName, function (err, data) {
              if (err) {
                res.send(err);
              } else {
                res.setHeader('Content-Type', 'application/pdf');
                res.setHeader(
                  'Content-Disposition',
                  'inline; filename=' + name,
                );

                // Create a read stream to send the file
                const fileStream = fs.createReadStream(fileName);
                fileStream.pipe(res);
              }
            });
          }
        },
      );
      // setTimeout(() => {
      //   util.promisify(fs.promises.unlink)(fileName);
      //   console.log(`File deleted: ${fileName}`);
      // }, 1000);
    } catch (error) {
      console.log(error);
    }
  }